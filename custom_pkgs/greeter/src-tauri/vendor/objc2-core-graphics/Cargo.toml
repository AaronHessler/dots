# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.71"
name = "objc2-core-graphics"
version = "0.3.1"
build = false
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Bindings to the CoreGraphics framework"
readme = "README.md"
keywords = [
    "cocoa",
    "apple",
    "framework",
    "macos",
    "ios",
]
categories = [
    "api-bindings",
    "development-tools::ffi",
    "external-ffi-bindings",
    "os::macos-apis",
]
license = "Zlib OR Apache-2.0 OR MIT"
repository = "https://github.com/madsmtm/objc2"

[package.metadata.docs.rs]
default-target = "aarch64-apple-darwin"
features = ["objc2-io-surface"]
rustc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "aarch64-apple-ios",
    "aarch64-apple-tvos",
    "aarch64-apple-watchos",
    "aarch64-apple-ios-macabi",
    "aarch64-apple-visionos",
]

[features]
CGAffineTransform = ["objc2-core-foundation/CFCGTypes"]
CGBase = []
CGBitmapContext = []
CGColor = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGColorConversionInfo = [
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFError",
]
CGColorSpace = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFData",
]
CGContext = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGConvertColorDataWithFormat = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGDataConsumer = [
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFURL",
]
CGDataProvider = [
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFURL",
]
CGDirectDisplay = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGDirectDisplayMetal = []
CGDirectPalette = []
CGDisplayConfiguration = [
    "bitflags",
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGDisplayFade = []
CGDisplayStream = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFRunLoop",
]
CGEXRToneMappingGamma = []
CGError = []
CGEvent = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFMachPort",
]
CGEventSource = ["objc2-core-foundation/CFDate"]
CGEventTypes = ["bitflags"]
CGFont = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDictionary",
]
CGFunction = ["objc2-core-foundation/CFCGTypes"]
CGGeometry = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGGradient = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFCGTypes",
]
CGITUToneMapping = []
CGImage = [
    "bitflags",
    "objc2-core-foundation/CFCGTypes",
]
CGLayer = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
]
CGPDFArray = ["objc2-core-foundation/CFCGTypes"]
CGPDFContentStream = ["objc2-core-foundation/CFArray"]
CGPDFContext = [
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFData",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFURL",
]
CGPDFDictionary = ["objc2-core-foundation/CFCGTypes"]
CGPDFDocument = [
    "bitflags",
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDictionary",
    "objc2-core-foundation/CFURL",
]
CGPDFObject = ["objc2-core-foundation/CFCGTypes"]
CGPDFOperatorTable = []
CGPDFPage = ["objc2-core-foundation/CFCGTypes"]
CGPDFScanner = ["objc2-core-foundation/CFCGTypes"]
CGPDFStream = ["objc2-core-foundation/CFData"]
CGPDFString = ["objc2-core-foundation/CFDate"]
CGPSConverter = ["objc2-core-foundation/CFDictionary"]
CGPath = [
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFCGTypes",
]
CGPattern = ["objc2-core-foundation/CFCGTypes"]
CGRemoteOperation = [
    "bitflags",
    "objc2-core-foundation/CFCGTypes",
    "objc2-core-foundation/CFDate",
    "objc2-core-foundation/CFMachPort",
]
CGSession = ["objc2-core-foundation/CFDictionary"]
CGShading = ["objc2-core-foundation/CFCGTypes"]
CGToneMapping = []
CGWindow = [
    "bitflags",
    "objc2-core-foundation/CFArray",
    "objc2-core-foundation/CFCGTypes",
]
CGWindowLevel = []
alloc = []
bitflags = ["dep:bitflags"]
block2 = ["dep:block2"]
default = [
    "std",
    "CGAffineTransform",
    "CGBase",
    "CGBitmapContext",
    "CGColor",
    "CGColorConversionInfo",
    "CGColorSpace",
    "CGContext",
    "CGConvertColorDataWithFormat",
    "CGDataConsumer",
    "CGDataProvider",
    "CGDirectDisplay",
    "CGDirectDisplayMetal",
    "CGDirectPalette",
    "CGDisplayConfiguration",
    "CGDisplayFade",
    "CGDisplayStream",
    "CGEXRToneMappingGamma",
    "CGError",
    "CGEvent",
    "CGEventSource",
    "CGEventTypes",
    "CGFont",
    "CGFunction",
    "CGGeometry",
    "CGGradient",
    "CGITUToneMapping",
    "CGImage",
    "CGLayer",
    "CGPDFArray",
    "CGPDFContentStream",
    "CGPDFContext",
    "CGPDFDictionary",
    "CGPDFDocument",
    "CGPDFObject",
    "CGPDFOperatorTable",
    "CGPDFPage",
    "CGPDFScanner",
    "CGPDFStream",
    "CGPDFString",
    "CGPSConverter",
    "CGPath",
    "CGPattern",
    "CGRemoteOperation",
    "CGSession",
    "CGShading",
    "CGToneMapping",
    "CGWindow",
    "CGWindowLevel",
    "bitflags",
    "block2",
    "dispatch2",
    "libc",
    "objc2",
    "objc2-metal",
]
dispatch2 = ["dep:dispatch2"]
libc = ["dep:libc"]
objc2 = [
    "dep:objc2",
    "dispatch2?/objc2",
    "objc2-core-foundation/objc2",
    "objc2-io-surface?/objc2",
]
objc2-io-surface = ["dep:objc2-io-surface"]
objc2-metal = ["dep:objc2-metal"]
std = ["alloc"]

[lib]
name = "objc2_core_graphics"
path = "src/lib.rs"

[dependencies.bitflags]
version = "2.5.0"
features = ["std"]
optional = true
default-features = false

[dependencies.block2]
version = ">=0.6.1, <0.8.0"
features = ["alloc"]
optional = true
default-features = false

[dependencies.dispatch2]
version = ">=0.3.0, <0.5.0"
features = ["alloc"]
optional = true
default-features = false

[dependencies.libc]
version = "0.2.80"
optional = true
default-features = false

[dependencies.objc2]
version = ">=0.6.1, <0.8.0"
features = ["std"]
optional = true
default-features = false

[dependencies.objc2-core-foundation]
version = "0.3.1"
default-features = false

[target.'cfg(not(target_os = "watchos"))'.dependencies.objc2-io-surface]
version = "0.3.1"
features = ["IOSurfaceRef"]
optional = true
default-features = false

[target.'cfg(not(target_os = "watchos"))'.dependencies.objc2-metal]
version = "0.3.1"
features = ["MTLDevice"]
optional = true
default-features = false

[lints.clippy]
ptr_as_ptr = "warn"
redundant_feature_names = "allow"

[lints.clippy.cargo]
level = "warn"
priority = -1

[lints.rust]
elided_lifetimes_in_paths = "warn"
missing_copy_implementations = "warn"
non_ascii_idents = "deny"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "deny"

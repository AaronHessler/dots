//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// Generic feature found by a CIDetector.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifeature?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIFeature;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CIFeature {}
);

impl CIFeature {
    extern_methods!(
        /// The type of the feature.
        #[unsafe(method(type))]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> Retained<NSString>;

        #[cfg(feature = "objc2-core-foundation")]
        /// The bounds of the feature in the image it was detected in.
        #[unsafe(method(bounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;
    );
}

/// Methods declared on superclass `NSObject`.
impl CIFeature {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern "C" {
    /// Specifies the type of a feature that is a face.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifeaturetypeface?language=objc)
    pub static CIFeatureTypeFace: &'static NSString;
}

extern "C" {
    /// Specifies the type of a feature that is a rectangle.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifeaturetyperectangle?language=objc)
    pub static CIFeatureTypeRectangle: &'static NSString;
}

extern "C" {
    /// Specifies the type of a feature that is a QR code.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifeaturetypeqrcode?language=objc)
    pub static CIFeatureTypeQRCode: &'static NSString;
}

extern "C" {
    /// Specifies the type of a feature that is a text.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifeaturetypetext?language=objc)
    pub static CIFeatureTypeText: &'static NSString;
}

extern_class!(
    /// A face feature found by a CIDetector.
    /// All positions are relative to the original image.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cifacefeature?language=objc)
    #[unsafe(super(CIFeature, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIFaceFeature;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CIFaceFeature {}
);

impl CIFaceFeature {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        /// coordinates of various cardinal points within a face.
        ///
        /// Note that the left eye is the eye on the left side of the face
        /// from the observer's perspective. It is not the left eye from
        /// the subject's perspective.
        #[unsafe(method(bounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;

        #[unsafe(method(hasLeftEyePosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasLeftEyePosition(&self) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(leftEyePosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn leftEyePosition(&self) -> CGPoint;

        #[unsafe(method(hasRightEyePosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasRightEyePosition(&self) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(rightEyePosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn rightEyePosition(&self) -> CGPoint;

        #[unsafe(method(hasMouthPosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasMouthPosition(&self) -> bool;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(mouthPosition))]
        #[unsafe(method_family = none)]
        pub unsafe fn mouthPosition(&self) -> CGPoint;

        #[unsafe(method(hasTrackingID))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasTrackingID(&self) -> bool;

        #[unsafe(method(trackingID))]
        #[unsafe(method_family = none)]
        pub unsafe fn trackingID(&self) -> c_int;

        #[unsafe(method(hasTrackingFrameCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasTrackingFrameCount(&self) -> bool;

        #[unsafe(method(trackingFrameCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn trackingFrameCount(&self) -> c_int;

        #[unsafe(method(hasFaceAngle))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasFaceAngle(&self) -> bool;

        #[unsafe(method(faceAngle))]
        #[unsafe(method_family = none)]
        pub unsafe fn faceAngle(&self) -> c_float;

        #[unsafe(method(hasSmile))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasSmile(&self) -> bool;

        #[unsafe(method(leftEyeClosed))]
        #[unsafe(method_family = none)]
        pub unsafe fn leftEyeClosed(&self) -> bool;

        #[unsafe(method(rightEyeClosed))]
        #[unsafe(method_family = none)]
        pub unsafe fn rightEyeClosed(&self) -> bool;
    );
}

/// Methods declared on superclass `NSObject`.
impl CIFaceFeature {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// A rectangle feature found by a CIDetector
    /// All positions are relative to the original image.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/coreimage/cirectanglefeature?language=objc)
    #[unsafe(super(CIFeature, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIRectangleFeature;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CIRectangleFeature {}
);

impl CIRectangleFeature {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn topLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn topRight(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomRight(&self) -> CGPoint;
    );
}

/// Methods declared on superclass `NSObject`.
impl CIRectangleFeature {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/ciqrcodefeature?language=objc)
    #[unsafe(super(CIFeature, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CIQRCodeFeature;
);

extern_conformance!(
    unsafe impl NSCoding for CIQRCodeFeature {}
);

extern_conformance!(
    unsafe impl NSCopying for CIQRCodeFeature {}
);

unsafe impl CopyingHelper for CIQRCodeFeature {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CIQRCodeFeature {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for CIQRCodeFeature {}
);

impl CIQRCodeFeature {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn topLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn topRight(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomRight(&self) -> CGPoint;

        #[unsafe(method(messageString))]
        #[unsafe(method_family = none)]
        pub unsafe fn messageString(&self) -> Option<Retained<NSString>>;

        #[cfg(feature = "CIBarcodeDescriptor")]
        #[unsafe(method(symbolDescriptor))]
        #[unsafe(method_family = none)]
        pub unsafe fn symbolDescriptor(&self) -> Option<Retained<CIQRCodeDescriptor>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl CIQRCodeFeature {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/citextfeature?language=objc)
    #[unsafe(super(CIFeature, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CITextFeature;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CITextFeature {}
);

impl CITextFeature {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn bounds(&self) -> CGRect;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn topLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn topRight(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomLeft))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomLeft(&self) -> CGPoint;

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomRight))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomRight(&self) -> CGPoint;

        #[unsafe(method(subFeatures))]
        #[unsafe(method_family = none)]
        pub unsafe fn subFeatures(&self) -> Option<Retained<NSArray>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl CITextFeature {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/wkfindconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKFindConfiguration;
);

extern_conformance!(
    unsafe impl NSCopying for WKFindConfiguration {}
);

unsafe impl CopyingHelper for WKFindConfiguration {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for WKFindConfiguration {}
);

impl WKFindConfiguration {
    extern_methods!(
        #[unsafe(method(backwards))]
        #[unsafe(method_family = none)]
        pub unsafe fn backwards(&self) -> bool;

        /// Setter for [`backwards`][Self::backwards].
        #[unsafe(method(setBackwards:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBackwards(&self, backwards: bool);

        #[unsafe(method(caseSensitive))]
        #[unsafe(method_family = none)]
        pub unsafe fn caseSensitive(&self) -> bool;

        /// Setter for [`caseSensitive`][Self::caseSensitive].
        #[unsafe(method(setCaseSensitive:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCaseSensitive(&self, case_sensitive: bool);

        #[unsafe(method(wraps))]
        #[unsafe(method_family = none)]
        pub unsafe fn wraps(&self) -> bool;

        /// Setter for [`wraps`][Self::wraps].
        #[unsafe(method(setWraps:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setWraps(&self, wraps: bool);
    );
}

/// Methods declared on superclass `NSObject`.
impl WKFindConfiguration {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}

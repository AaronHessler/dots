# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.77"
name = "wry"
version = "0.51.2"
authors = ["Tauri Programme within The Commons Conservancy"]
build = "build.rs"
exclude = [
    "/.changes",
    "/.github",
    "/audits",
    "/wry-logo.svg",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Cross-platform WebView rendering library"
documentation = "https://docs.rs/wry"
readme = "README.md"
categories = ["gui"]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/tauri-apps/wry"

[package.metadata.docs.rs]
features = [
    "drag-drop",
    "protocol",
    "os-webview",
]
no-default-features = true
rustc-args = [
    "--cfg",
    "docsrs",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
targets = [
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
]

[features]
default = [
    "drag-drop",
    "protocol",
    "os-webview",
]
devtools = []
drag-drop = []
fullscreen = []
linux-body = [
    "webkit2gtk/v2_40",
    "os-webview",
]
mac-proxy = []
os-webview = [
    "javascriptcore-rs",
    "webkit2gtk",
    "webkit2gtk-sys",
    "dep:gtk",
    "soup3",
    "x11-dl",
    "gdkx11",
]
protocol = []
serde = ["dpi/serde"]
tracing = ["dep:tracing"]
transparent = []

[lib]
name = "wry"
path = "src/lib.rs"

[[example]]
name = "async_custom_protocol"
path = "examples/async_custom_protocol.rs"

[[example]]
name = "custom_protocol"
path = "examples/custom_protocol.rs"

[[example]]
name = "custom_titlebar"
path = "examples/custom_titlebar.rs"

[[example]]
name = "gtk_multiwebview"
path = "examples/gtk_multiwebview.rs"

[[example]]
name = "multiwebview"
path = "examples/multiwebview.rs"

[[example]]
name = "multiwindow"
path = "examples/multiwindow.rs"

[[example]]
name = "reparent"
path = "examples/reparent.rs"

[[example]]
name = "simple"
path = "examples/simple.rs"

[[example]]
name = "streaming"
path = "examples/streaming.rs"

[[example]]
name = "transparent"
path = "examples/transparent.rs"

[[example]]
name = "wgpu"
path = "examples/wgpu.rs"

[[example]]
name = "window_border"
path = "examples/window_border.rs"

[[example]]
name = "winit"
path = "examples/winit.rs"

[dependencies.cookie]
version = "0.18"

[dependencies.dpi]
version = "0.1"

[dependencies.http]
version = "1.1"

[dependencies.once_cell]
version = "1"

[dependencies.raw-window-handle]
version = "0.6"
features = ["std"]

[dependencies.thiserror]
version = "2.0"

[dependencies.tracing]
version = "0.1"
optional = true

[dev-dependencies.getrandom]
version = "0.3"

[dev-dependencies.http-range]
version = "0.1"

[dev-dependencies.percent-encoding]
version = "2.3"

[dev-dependencies.pollster]
version = "0.4.0"

[dev-dependencies.tao]
version = "0.33"

[dev-dependencies.wgpu]
version = "23"

[dev-dependencies.winit]
version = "0.30"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gdkx11]
version = "0.18"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.gtk]
version = "0.18"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.javascriptcore-rs]
version = "=1.1.2"
features = ["v2_28"]
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.percent-encoding]
version = "2.3"

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.soup3]
version = "0.5"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.webkit2gtk]
version = "=2.0.1"
features = ["v2_38"]
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.webkit2gtk-sys]
version = "=2.0.1"
optional = true

[target.'cfg(any(target_os = "linux", target_os = "dragonfly", target_os = "freebsd", target_os = "openbsd", target_os = "netbsd"))'.dependencies.x11-dl]
version = "2.21"
optional = true

[target.'cfg(target_os = "android")'.dependencies.base64]
version = "0.22"

[target.'cfg(target_os = "android")'.dependencies.crossbeam-channel]
version = "0.5"

[target.'cfg(target_os = "android")'.dependencies.html5ever]
version = "0.26"

[target.'cfg(target_os = "android")'.dependencies.jni]
version = "0.21"

[target.'cfg(target_os = "android")'.dependencies.kuchiki]
version = "0.8"
package = "kuchikiki"

[target.'cfg(target_os = "android")'.dependencies.libc]
version = "0.2"

[target.'cfg(target_os = "android")'.dependencies.ndk]
version = "0.9"

[target.'cfg(target_os = "android")'.dependencies.sha2]
version = "0.10"

[target.'cfg(target_os = "android")'.dependencies.tao-macros]
version = "0.1"

[target.'cfg(target_os = "ios")'.dependencies.objc2-ui-kit]
version = "0.3.0"
features = [
    "std",
    "objc2-core-foundation",
    "UIResponder",
    "UIScrollView",
    "UIView",
    "UIWindow",
    "UIApplication",
    "UIEvent",
]
default-features = false

[target.'cfg(target_os = "macos")'.dependencies.objc2-app-kit]
version = "0.3.0"
features = [
    "std",
    "objc2-core-foundation",
    "NSApplication",
    "NSButton",
    "NSControl",
    "NSEvent",
    "NSWindow",
    "NSView",
    "NSPasteboard",
    "NSPanel",
    "NSResponder",
    "NSOpenPanel",
    "NSSavePanel",
    "NSMenu",
]
default-features = false

[target.'cfg(target_os = "windows")'.dependencies.dunce]
version = "1"

[target.'cfg(target_os = "windows")'.dependencies.webview2-com]
version = "0.37"

[target.'cfg(target_os = "windows")'.dependencies.windows]
version = "0.61"
features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_System_Com",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_LibraryLoader",
    "Win32_System_Ole",
    "Win32_System_SystemInformation",
    "Win32_System_SystemServices",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Globalization",
    "Win32_UI_HiDpi",
    "Win32_UI_Input",
    "Win32_UI_Input_KeyboardAndMouse",
]

[target.'cfg(target_os = "windows")'.dependencies.windows-core]
version = "0.61"

[target.'cfg(target_os = "windows")'.dependencies.windows-version]
version = "0.1"

[target.'cfg(target_vendor = "apple")'.dependencies.block2]
version = "0.6"

[target.'cfg(target_vendor = "apple")'.dependencies.objc2]
version = "0.6"
features = [
    "exception",
    "disable-encoding-assertions",
]

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-core-foundation]
version = "0.3.0"
features = [
    "std",
    "CFCGTypes",
]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-foundation]
version = "0.3.0"
features = [
    "std",
    "objc2-core-foundation",
    "NSURLRequest",
    "NSURL",
    "NSString",
    "NSKeyValueCoding",
    "NSStream",
    "NSDictionary",
    "NSObject",
    "NSData",
    "NSEnumerator",
    "NSKeyValueObserving",
    "NSThread",
    "NSJSONSerialization",
    "NSDate",
    "NSBundle",
    "NSProcessInfo",
    "NSValue",
    "NSRange",
    "NSRunLoop",
]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.objc2-web-kit]
version = "0.3.0"
features = [
    "std",
    "objc2-core-foundation",
    "objc2-app-kit",
    "block2",
    "WKWebView",
    "WKWebViewConfiguration",
    "WKWebsiteDataStore",
    "WKDownload",
    "WKDownloadDelegate",
    "WKNavigation",
    "WKNavigationDelegate",
    "WKUserContentController",
    "WKURLSchemeHandler",
    "WKPreferences",
    "WKURLSchemeTask",
    "WKScriptMessageHandler",
    "WKUIDelegate",
    "WKOpenPanelParameters",
    "WKFrameInfo",
    "WKSecurityOrigin",
    "WKScriptMessage",
    "WKNavigationAction",
    "WKWebpagePreferences",
    "WKNavigationResponse",
    "WKUserScript",
    "WKHTTPCookieStore",
]
default-features = false

[target.'cfg(target_vendor = "apple")'.dependencies.url]
version = "2.5"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = [
    "cfg(linux)",
    "cfg(gtk)",
]

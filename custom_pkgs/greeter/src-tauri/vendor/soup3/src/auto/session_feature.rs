// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::prelude::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "SoupSessionFeature")]
    pub struct SessionFeature(Interface<ffi::SoupSessionFeature, ffi::SoupSessionFeatureInterface>);

    match fn {
        type_ => || ffi::soup_session_feature_get_type(),
    }
}

impl SessionFeature {
    pub const NONE: Option<&'static SessionFeature> = None;
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::SessionFeature>> Sealed for T {}
}

pub trait SessionFeatureExt: IsA<SessionFeature> + sealed::Sealed + 'static {}

impl<O: IsA<SessionFeature>> SessionFeatureExt for O {}

impl fmt::Display for SessionFeature {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("SessionFeature")
    }
}

//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;

use crate::*;

/// NSOpenGLSurfaceResolution.
#[cfg(all(feature = "NSResponder", feature = "NSView"))]
impl NSView {
    extern_methods!(
        #[deprecated = "Use NSOpenGLView instead."]
        #[unsafe(method(wantsBestResolutionOpenGLSurface))]
        #[unsafe(method_family = none)]
        pub unsafe fn wantsBestResolutionOpenGLSurface(&self) -> bool;

        /// Setter for [`wantsBestResolutionOpenGLSurface`][Self::wantsBestResolutionOpenGLSurface].
        #[deprecated = "Use NSOpenGLView instead."]
        #[unsafe(method(setWantsBestResolutionOpenGLSurface:))]
        #[unsafe(method_family = none)]
        pub fn setWantsBestResolutionOpenGLSurface(
            &self,
            wants_best_resolution_open_gl_surface: bool,
        );
    );
}

/// NSExtendedDynamicRange.
#[cfg(all(feature = "NSResponder", feature = "NSView"))]
impl NSView {
    extern_methods!(
        #[deprecated = "Use NSOpenGLView instead."]
        #[unsafe(method(wantsExtendedDynamicRangeOpenGLSurface))]
        #[unsafe(method_family = none)]
        pub unsafe fn wantsExtendedDynamicRangeOpenGLSurface(&self) -> bool;

        /// Setter for [`wantsExtendedDynamicRangeOpenGLSurface`][Self::wantsExtendedDynamicRangeOpenGLSurface].
        #[deprecated = "Use NSOpenGLView instead."]
        #[unsafe(method(setWantsExtendedDynamicRangeOpenGLSurface:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setWantsExtendedDynamicRangeOpenGLSurface(
            &self,
            wants_extended_dynamic_range_open_gl_surface: bool,
        );
    );
}
